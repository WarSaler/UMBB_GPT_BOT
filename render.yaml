services:
  - type: web
    name: umbb-gpt-bot
    env: python
    plan: free
    buildCommand: pip install -r requirements.txt
    startCommand: python3 bot.py
    healthCheckPath: /health
    envVars:
      - key: PYTHON_VERSION
        value: 3.11
      - key: TELEGRAM_BOT_TOKEN
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: OPENAI_MODEL
        value: gpt-4o-mini
      - key: OPENAI_MAX_TOKENS
        value: 2000
      - key: OPENAI_TEMPERATURE
        value: 0.3
      - key: SERVER_HOST
        value: 0.0.0.0
      - key: PORT
        value: 8000
      - key: WEBHOOK_URL
        value: https://umbb-gpt-bot.onrender.com/webhook
      - key: KEEP_ALIVE_ENABLED
        value: true
      - key: KEEP_ALIVE_INTERVAL
        value: 60
      - key: KEEP_ALIVE_URL
        value: https://umbb-gpt-bot.onrender.com/health
      - key: TESSERACT_CMD
        value: /usr/bin/tesseract
      - key: OCR_LANGUAGES
        value: eng,rus,deu,fra,spa,ita,por,chi_sim,jpn,kor
      - key: OCR_ENGINE
        value: tesseract
      - key: DEFAULT_SOURCE_LANG
        value: auto
      - key: DEFAULT_TARGET_LANG
        value: en
      - key: TRANSLATION_SERVICE
        value: openai
      - key: MAX_IMAGE_SIZE
        value: 10485760
      - key: SUPPORTED_IMAGE_FORMATS
        value: jpg,jpeg,png,bmp,tiff,webp
      - key: IMAGE_PREPROCESSING_ENABLED
        value: true
      - key: LOG_LEVEL
        value: INFO
      - key: LOG_FILE_ENABLED
        value: false

      - key: CACHE_ENABLED
        value: false
      - key: DEBUG
        value: false
      - key: DEVELOPMENT
        value: false
      - key: WEBHOOK_PATH
        value: /webhook
    # Настройки автомасштабирования
    autoDeploy: true
    # Регион (выберите ближайший)
    region: oregon
    # Настройки ресурсов для бесплатного плана
    disk:
      name: data
      mountPath: /data
      sizeGB: 1
    # Проверки здоровья
    healthCheck:
      path: /health
      intervalSeconds: 30
      timeoutSeconds: 10
      unhealthyThresholdCount: 3
      healthyThresholdCount: 2
    # Настройки сети
    domains:
      - umbb-gpt-bot.onrender.com
    # Переменные среды для оптимизации
    runtimeEnv:
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
      PIP_NO_CACHE_DIR: 1
      PIP_DISABLE_PIP_VERSION_CHECK: 1
    # Команды для установки системных пакетов
    preDeployCommand: |
      echo "Preparing system dependencies..."
      # Обновление системы
      apt-get update -y
      # Установка Tesseract OCR и языковых пакетов
      apt-get install -y tesseract-ocr
      apt-get install -y tesseract-ocr-eng tesseract-ocr-rus tesseract-ocr-deu
      apt-get install -y tesseract-ocr-fra tesseract-ocr-spa tesseract-ocr-ita
      apt-get install -y tesseract-ocr-por tesseract-ocr-chi-sim tesseract-ocr-jpn
      apt-get install -y tesseract-ocr-kor
      # Очистка кэша
      apt-get clean
      rm -rf /var/lib/apt/lists/*
      echo "Tesseract OCR installed successfully"
    # Настройки для оптимизации производительности
    scaling:
      minInstances: 1
      maxInstances: 1
    # Лимиты ресурсов для бесплатного плана
    resources:
      cpu: 0.5
      memory: 512Mi
    # Настройки таймаутов
    timeouts:
      build: 600  # 10 минут на сборку
      deploy: 300  # 5 минут на развертывание
    # Настройки для работы с файлами
    staticPublishPath: ./static
    # Команды жизненного цикла
    postDeployCommand: |
      echo "Post-deploy setup..."
      # Проверка установленных пакетов
      tesseract --version
      python -c "import openai; print('OpenAI library imported successfully')"
      python -c "import pytesseract; print('PyTesseract imported successfully')"
      echo "All dependencies verified successfully"
    # Настройки логирования
    logging:
      level: INFO
      format: json
    # Мониторинг
    monitoring:
      enabled: true
      alerts:
        - type: cpu
          threshold: 80
        - type: memory
          threshold: 80
        - type: response_time
          threshold: 5000
    # Настройки безопасности
    security:
      allowedOrigins:
        - "*"
      headers:
        - "X-Content-Type-Options: nosniff"
        - "X-Frame-Options: DENY"
        - "X-XSS-Protection: 1; mode=block"
    # Переменные окружения для оптимизации Python
    buildEnvVars:
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: PYTHONDONTWRITEBYTECODE
        value: "1"
      - key: PIP_NO_CACHE_DIR
        value: "1"
      - key: PIP_DISABLE_PIP_VERSION_CHECK
        value: "1"
      - key: DEBIAN_FRONTEND
        value: noninteractive
    # Настройки для работы с webhook
    routes:
      - type: rewrite
        source: /webhook
        destination: /webhook
      - type: rewrite
        source: /health
        destination: /health
      - type: rewrite
        source: /status
        destination: /health
    # Настройки кэширования
    headers:
      "/static/*":
        - "Cache-Control: public, max-age=31536000"
      "/health":
        - "Cache-Control: no-cache, no-store, must-revalidate"
    # Настройки для работы в продакшене
    production:
      replicas: 1
      strategy: RollingUpdate
      maxUnavailable: 0
      maxSurge: 1
    # Настройки для разработки (если нужно)
    development:
      hotReload: false
      debugMode: false
    # Настройки резервного копирования
    backup:
      enabled: false
    # Настройки для работы с базой данных (если понадобится в будущем)
    # databases:
    #   - name: postgres
    #     plan: free
    #     version: "14"
    # Настройки для Redis (если понадобится кэширование)
    # redis:
    #   plan: free
    #   maxMemory: 25mb
    # Настройки уведомлений
    notifications:
      slack:
        enabled: false
      email:
        enabled: true
        events:
          - deploy-succeeded
          - deploy-failed
          - service-suspended
    # Дополнительные настройки для оптимизации
    optimization:
      buildCache: true
      dependencyCache: true
      staticAssetOptimization: true
    # Настройки для работы с SSL
    ssl:
      enabled: true
      redirect: true
    # Настройки CORS
    cors:
      enabled: true
      allowedOrigins:
        - "https://api.telegram.org"
        - "https://api.openai.com"
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowedHeaders:
        - "Content-Type"
        - "Authorization"
        - "X-Requested-With"
    # Настройки для работы с файлами
    fileUploads:
      maxSize: 10MB
      allowedTypes:
        - image/jpeg
        - image/png
        - image/bmp
        - image/tiff
        - image/webp

    # Настройки для мониторинга производительности
    performance:
      monitoring: true
      profiling: false
      tracing: false
    # Настройки для работы с внешними API
    externalServices:
      timeout: 30
      retries: 3
      backoff: exponential
    # Настройки для обработки ошибок
    errorHandling:
      captureExceptions: true
      logErrors: true
      notifyOnErrors: true
    # Настройки для работы с метриками
    metrics:
      enabled: true
      endpoint: /metrics
      format: prometheus
    # Финальные настройки
    finalSettings:
      gracefulShutdown: true
      shutdownTimeout: 30
      keepAliveTimeout: 65
      headersTimeout: 66